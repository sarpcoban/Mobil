import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class Animal {
  late String name;
  late int age;
  late String type;
  late String race;

  Animal(this.name, this.age, this.type, this.race);
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        // This is the theme of your application.
        //
        // Try running your application with "flutter run". You'll see the
        // application has a blue toolbar. Then, without quitting the app, try
        // changing the primarySwatch below to Colors.green and then invoke
        // "hot reload" (press "r" in the console where you ran "flutter run",
        // or simply save your changes to "hot reload" in a Flutter IDE).
        // Notice that the counter didn't reset back to zero; the application
        // is not restarted.
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(title: 'Flutter Demo Home Page'),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({Key? key, required this.title}) : super(key: key);

  // This widget is the home page of your application. It is stateful, meaning
  // that it has a State object (defined below) that contains fields that affect
  // how it looks.

  // This class is the configuration for the state. It holds the values (in this
  // case the title) provided by the parent (in this case the App widget) and
  // used by the build method of the State. Fields in a Widget subclass are
  // always marked "final".

  final String title;

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final TextEditingController _nameController = TextEditingController();
  final TextEditingController _ageController = TextEditingController();
  final TextEditingController _typeController = TextEditingController();
  final TextEditingController _raceController = TextEditingController();
  final TextEditingController _searchController = TextEditingController();
  //TODO: Animal sınıfını içeren list oluşturunuz.


  @override
  Widget build(BuildContext context) {
    // This method is rerun every time setState is called, for instance as done
    // by the _incrementCounter method above.
    //
    // The Flutter framework has been optimized to make rerunning build methods
    // fast, so that you can just rebuild anything that needs updating rather
    // than having to individually change instances of widgets.
    return Scaffold(
        appBar: AppBar(
          title: const Text('Vet App'),
        ),
        body: Column(children: [
          Expanded(
            child: ListView.builder(
                shrinkWrap: true,
                //TODO: List'in boyutunu itemCount'a atayınız.
                itemCount:
                itemBuilder: (context, index) => Card(
                    margin: EdgeInsets.fromLTRB(10, 10, 10, 0),
                    child: ListTile(
                      title: Text(
                        //TODO:List'in içindeki elemanları yazdırınız.

                    ),



                    ))),
          ),
          Column(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                Row(children: [
                  Flexible(
                      child: Container(
                          margin: const EdgeInsets.fromLTRB(10, 0, 10, 5),
                          alignment: Alignment.center,
                          child: TextField(
                              controller: _nameController,
                              decoration: const InputDecoration(
                                labelText: "Name",
                                border: OutlineInputBorder(),
                              )))),
                  Flexible(
                      child: Container(
                          margin: const EdgeInsets.fromLTRB(10, 0, 10, 5),
                          alignment: Alignment.center,
                          child: TextField(
                              controller: _ageController,
                              keyboardType: TextInputType.number,
                              decoration: const InputDecoration(
                                labelText: "Age",
                                border: OutlineInputBorder(),
                              )))),
                  Flexible(
                      child: Container(
                          margin: const EdgeInsets.fromLTRB(10, 0, 10, 5),
                          alignment: Alignment.center,
                          child: TextField(
                              controller: _typeController,
                              keyboardType: TextInputType.number,
                              decoration: const InputDecoration(
                                labelText: "Type",
                                border: OutlineInputBorder(),
                              )))),
                  Flexible(
                      child: Container(
                          margin: const EdgeInsets.fromLTRB(10, 0, 10, 5),
                          alignment: Alignment.center,
                          child: TextField(
                              controller: _raceController,
                              keyboardType: TextInputType.number,
                              decoration: const InputDecoration(
                                labelText: "Race",
                                border: OutlineInputBorder(),
                              ))))
                ]),
                ]),
          Container(
              margin: const EdgeInsets.fromLTRB(10, 0, 10, 5),
              child: TextField(
                  controller: _searchController,

                  decoration: const InputDecoration(
                    labelText: "Search",
                    border: OutlineInputBorder(),
                  )
              )),
          Container(
              margin: const EdgeInsets.fromLTRB(10, 0, 10, 5),
              child: ElevatedButton.icon(
                icon: const Icon(Icons.add),
                style: ElevatedButton.styleFrom(
                    minimumSize: const Size.fromHeight(45)),
                label: const Text(
                  "Add Animal",
                  style: TextStyle(
                    fontSize: 18,
                  ),
                ),
                onPressed: () => setState(() {
                  //TODO: List'e eleman ekleyiniz.
                }),
              )),
          Container(
              margin: const EdgeInsets.fromLTRB(10, 0, 10, 5),
              child: ElevatedButton.icon(
                icon: const Icon(Icons.zoom_in),
                style: ElevatedButton.styleFrom(
                    minimumSize: const Size.fromHeight(45)),
                label: const Text(
                  "Search Animal",
                  style: TextStyle(
                    fontSize: 18,
                  ),
                ),
                onPressed: () => setState(() {
                  //TODO: List'in içinde eleman arayınız. Bulunan elemanı print ediniz.
                }),
              )),
        ]));
  }
}
